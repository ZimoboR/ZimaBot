# cloner_worker.py
import asyncio
import json
import os  # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# from pyrogram import Client # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–∏ main, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ –¥–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–∞—à–µ–≥–æ Railway —Å–µ—Ä–≤–∏—Å–∞
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
DONOR_ID = int(os.getenv("DONOR_ID"))
MY_ID = int(os.getenv("MY_ID"))

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ env vars –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏)
MAX_RETRIES = 3
DOWNLOAD_TIMEOUT = 60
SEND_TIMEOUT = 30
CHECK_INTERVAL = int(os.getenv("CHECK_INTERVAL", 30))  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 —Å–µ–∫—É–Ω–¥
STATE_FILE = "last_message.json"  # –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ ID

# –ò–º–ø–æ—Ä—Ç—ã Pyrogram –≤–Ω—É—Ç—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –≤–≤–µ—Ä—Ö—É, –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
from pyrogram import Client
from pyrogram.errors import FloodWait, RPCError, SlowmodeWait
from pyrogram.types import Message
from pyrogram.enums import ParseMode


async def get_last_processed_id(donor_id: int) -> int:
    """–ß–∏—Ç–∞–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(STATE_FILE, 'r', encoding='utf-8') as f:
            data = json.load(f)
            return data.get(str(donor_id), 0)
    except (FileNotFoundError, json.JSONDecodeError):
        return 0


async def save_last_processed_id(donor_id: int, msg_id: int):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        data = {}
        try:
            with open(STATE_FILE, 'r', encoding='utf-8') as f:
                data = json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            pass

        data[str(donor_id)] = msg_id

        with open(STATE_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print(f"üíæ –ü–æ—Å–ª–µ–¥–Ω–∏–π ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {msg_id}")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {e}")


async def fetch_new_messages(client: Client, donor_id: int, last_id: int):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–µ–µ last_id (–≤ –ø–æ—Ä—è–¥–∫–µ –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)"""
    new_messages = []
    async for msg in client.get_chat_history(donor_id, limit=10):  # –°–º–æ—Ç—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
        if msg.id > last_id:
            new_messages.append(msg)
        else:
            break  # –°–æ–æ–±—â–µ–Ω–∏—è –∏–¥—É—Ç –ø–æ —É–±—ã–≤–∞–Ω–∏—é, –∑–Ω–∞—á–∏—Ç –¥–∞–ª—å—à–µ —Å—Ç–∞—Ä—ã–µ
    return new_messages[::-1]  # –û—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º


async def download_media(msg: Message):
    for attempt in range(MAX_RETRIES):
        try:
            print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}) –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id}")
            return await asyncio.wait_for(msg.download(in_memory=True), timeout=DOWNLOAD_TIMEOUT)
        except asyncio.TimeoutError:
            print(f"‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}) –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id}")
        except FloodWait as e:
            wait = e.value
            print(f"‚è≥ FloodWait –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id}: –∂–¥—ë–º {wait} —Å–µ–∫")
            await asyncio.sleep(wait)
            continue # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        except RPCError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id}: {e}")
            break
        except Exception as e:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id}: {e}")
            break
        await asyncio.sleep(1)
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id} –ø–æ—Å–ª–µ {MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫.")
    return None


async def send_with_retry(client: Client, func, *args, **kwargs):
    for attempt in range(MAX_RETRIES):
        try:
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
            return await asyncio.wait_for(func(*args, **kwargs), timeout=SEND_TIMEOUT)
        except asyncio.TimeoutError:
            print(f"‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
        except FloodWait as e:
            wait = e.value
            print(f"‚è≥ FloodWait –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: –∂–¥—ë–º {wait} —Å–µ–∫")
            await asyncio.sleep(wait)
            continue # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        except SlowmodeWait as e:
            wait = e.value
            print(f"‚è≥ Slowmode –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: –∂–¥—ë–º {wait} —Å–µ–∫")
            await asyncio.sleep(wait)
            continue # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        except RPCError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            break
        except Exception as e:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            break
        await asyncio.sleep(1)
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ {MAX_RETRIES} –ø–æ–ø—ã—Ç–æ–∫.")
    return None


async def clone_new_messages():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram...")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'my_session' –¥–ª—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏. –û–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ.
    async with Client('my_session', api_id=API_ID, api_hash=API_HASH) as client:
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç Pyrogram –ø–æ–¥–∫–ª—é—á–µ–Ω.")

        print("üîÑ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π ID
        last_id = await get_last_processed_id(DONOR_ID)
        print(f"üü¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π ID: {last_id}. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")

        while True:
            try:
                print("üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
                # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                new_msgs = await fetch_new_messages(client, DONOR_ID, last_id)
                if new_msgs:
                    print(f"üì• –ù–∞–π–¥–µ–Ω–æ {len(new_msgs)} –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!")

                    for msg in new_msgs:
                        print(f"üì¶ –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ {msg.id}")
                        try:
                            if msg.service:
                                print("‚è≠Ô∏è –°–ª—É–∂–µ–±–Ω–æ–µ ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ")
                                continue

                            if msg.video:
                                video = await download_media(msg)
                                if video:
                                    await send_with_retry(
                                        client,
                                        client.send_video,
                                        chat_id=MY_ID,
                                        video=video,
                                        caption=msg.caption.html if msg.caption else None,
                                        parse_mode=ParseMode.HTML
                                    )
                                    print(f"‚úÖ –í–∏–¥–µ–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                                else:
                                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")

                            elif msg.photo:
                                photo = await download_media(msg)
                                if photo:
                                    await send_with_retry(
                                        client,
                                        client.send_photo,
                                        chat_id=MY_ID,
                                        photo=photo,
                                        caption=msg.caption.html if msg.caption else None,
                                        parse_mode=ParseMode.HTML
                                    )
                                    print(f"‚úÖ –§–æ—Ç–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                                else:
                                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ")

                            elif msg.document:
                                doc = await download_media(msg)
                                if doc:
                                    await send_with_retry(
                                        client,
                                        client.send_document,
                                        chat_id=MY_ID,
                                        document=doc,
                                        caption=msg.caption.html if msg.caption else None,
                                        parse_mode=ParseMode.HTML
                                    )
                                    print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
                                else:
                                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")

                            elif msg.text:
                                await send_with_retry(
                                    client,
                                    client.send_message,
                                    chat_id=MY_ID,
                                    text=msg.text,
                                    parse_mode=ParseMode.HTML
                                )
                                print(f"‚úÖ –¢–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è {msg.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

                            else:
                                print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ç–∏–ø: {msg.media or 'unknown'}")

                            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π ID –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                            # –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤ —Å–ª—É—á–∞–µ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ —Å–±–æ—è,
                            # –Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π. –ú–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–≥–∏–∫—É.
                            last_id = msg.id
                            await save_last_processed_id(DONOR_ID, last_id)

                        except Exception as e:
                            # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è,
                            # —á—Ç–æ–±—ã –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≤–µ—Å—å —Ü–∏–∫–ª
                            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ {msg.id}: {e}")
                            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–≤—Ç–æ—Ä–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ

                    print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã.")
                else:
                    print(f"‚è≥ –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {CHECK_INTERVAL} —Å–µ–∫...")

                await asyncio.sleep(CHECK_INTERVAL)

            except asyncio.CancelledError:
                print("üõë –ó–∞–¥–∞—á–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                break
            except Exception as e:
                # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –≤—Å–µ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
                print(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
                print("‚ö†Ô∏è –¶–∏–∫–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏...")
                await asyncio.sleep(CHECK_INTERVAL) # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º —Ü–∏–∫–ª–∞


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Railway
async def main():
    """–ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞."""
    print("--- –ó–∞–ø—É—Å–∫ Telegram Cloner Worker ---")
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        await clone_new_messages()
    except KeyboardInterrupt:
        print("\nüõë –†–∞–±–æ—Ç–∞ –≤–æ—Ä–∫–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C).")
    except Exception as e:
        print(f"üö® –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞: {e}")
    finally:
        print("--- –†–∞–±–æ—Ç–∞ Telegram Cloner Worker –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---")


# –≠—Ç–æ—Ç –±–ª–æ–∫ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ Railway, –Ω–æ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == '__main__':
    asyncio.run(main())
